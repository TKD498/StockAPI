import { IHeaders } from "../transport/request";
import { IAggsQuery, IAggs } from "../stocks/aggregates";
import { IAggsPreviousCloseQuery, IAggsPreviousClose } from "../stocks/previousClose";
import { ITradesQuotesQuery } from "../stocks/trades";
import { IOptionsDailyOpenCloseQuery, IOptionsDailyOpenClose } from "./dailyOpenClose";
import { IOptionTrades } from "./trades";
import { IOptionsLastTrade } from "./lastTrade";
import { IOptionQuotes } from "./quotes";
import { IOptionsSnapshotContract } from "./snapshots";
import { ISummaries, ISummariesQuery } from "../stocks/summaries";
export { IOptionsDailyOpenCloseQuery, IOptionsDailyOpenClose, } from "./dailyOpenClose";
export { IOptionTrades } from "./trades";
export { IOptionsLastTrade } from "./lastTrade";
export { IOptionQuotes } from "./quotes";
export { IOptionsSnapshotContract, snapshotOptionContract } from "./snapshots";
export interface IOptionsClient {
    aggregates: (ticker: string, multiplier: number, timespan: string, from: string, to: string, query?: IAggsQuery, headers?: IHeaders) => Promise<IAggs>;
    summaries: (query?: ISummariesQuery, headers?: IHeaders) => Promise<ISummaries>;
    dailyOpenClose: (symbol: string, date: string, query?: IOptionsDailyOpenCloseQuery) => Promise<IOptionsDailyOpenClose>;
    previousClose: (symbol: string, query?: IAggsPreviousCloseQuery) => Promise<IAggsPreviousClose>;
    trades: (optionsTicker: string, query?: ITradesQuotesQuery) => Promise<IOptionTrades>;
    lastTrade: (symbol: string) => Promise<IOptionsLastTrade>;
    quotes: (optionsTicker: string, query?: ITradesQuotesQuery) => Promise<IOptionQuotes>;
    snapshotOptionContract: (underlyingAsset: string, optionContract: string) => Promise<IOptionsSnapshotContract>;
}
export declare const optionsClient: (apiKey: string, apiBase?: string, headers?: IHeaders) => IOptionsClient;
export default optionsClient;
