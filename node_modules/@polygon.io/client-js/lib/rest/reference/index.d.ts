import { IHeaders } from "../transport/request";
import { IConditionsQuery, IConditions } from "./conditions";
import { IExchangesQuery, IExchanges } from "./exchanges";
import { IMarketHoliday } from "./marketHolidays";
import { IMarketStatus } from "./marketStatus";
import { IOptionsContractQuery, IOptionsContract } from "./optionsContract";
import { IOptionsContractsQuery, IOptionsContracts } from "./optionsContracts";
import { IDividendsResults, IDividendsQuery } from "./dividends";
import { IStockSplitsResults, IStockSplitsQuery } from "./stockSplits";
import { IStockFinancialResults, IStockFinancialQuery } from "./stockFinancials";
import { ITickerDetails } from "./tickerDetails";
import { ITickerNews, ITickerNewsQuery } from "./tickerNews";
import { ITickers, ITickersQuery } from "./tickers";
import { ITickerTypes, ITickerTypesQuery } from "./tickerTypes";
export { IConditions } from "./conditions";
export { IExchanges } from "./exchanges";
export { IMarketHoliday } from "./marketHolidays";
export { IMarketStatus } from "./marketStatus";
export { IDividendsResults } from "./dividends";
export { IStockSplitsResults } from "./stockSplits";
export { IStockFinancialResults } from "./stockFinancials";
export { ITickerDetails } from "./tickerDetails";
export { ITickerNews, ITickerNewsQuery } from "./tickerNews";
export { ITickers, ITickersQuery } from "./tickers";
export { ITickerTypes, ITickerTypesQuery } from "./tickerTypes";
export interface IReferenceClient {
    conditions: (query?: IConditionsQuery, headers?: IHeaders) => Promise<IConditions>;
    exchanges: (query?: IExchangesQuery, headers?: IHeaders) => Promise<IExchanges>;
    marketHolidays: (headers?: IHeaders) => Promise<IMarketHoliday[]>;
    marketStatus: (headers?: IHeaders) => Promise<IMarketStatus>;
    optionsContract: (optionsTicker: string, query?: IOptionsContractQuery, headers?: IHeaders) => Promise<IOptionsContract>;
    optionsContracts: (query?: IOptionsContractsQuery, headers?: IHeaders) => Promise<IOptionsContracts>;
    dividends: (query?: IDividendsQuery, headers?: IHeaders) => Promise<IDividendsResults>;
    stockSplits: (query?: IStockSplitsQuery, headers?: IHeaders) => Promise<IStockSplitsResults>;
    stockFinancials: (query?: IStockFinancialQuery, headers?: IHeaders) => Promise<IStockFinancialResults>;
    tickerDetails: (symbol: string, headers?: IHeaders) => Promise<ITickerDetails>;
    tickerNews: (query?: ITickerNewsQuery, headers?: IHeaders) => Promise<ITickerNews>;
    tickers: (query?: ITickersQuery, headers?: IHeaders) => Promise<ITickers>;
    tickerTypes: (query?: ITickerTypesQuery, headers?: IHeaders) => Promise<ITickerTypes>;
}
export declare const referenceClient: (apiKey: string, apiBase?: string, headers?: IHeaders) => IReferenceClient;
export default referenceClient;
